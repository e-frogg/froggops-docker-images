#
name: Create and publish a Docker image

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build-and-push-image:
    strategy:
      matrix:
        include:
          - image: 'mkdocs'
            fops_version: '9'
          - image: 'caddy-maintenance'
            fops_version: '2'
          - image: 'fops-ci-php'
            fops_version: '8.3'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./${{ matrix.image }}/Dockerfile
          failure-threshold: error

      - name: Log in to the Container registry
        uses: docker/login-action@6d4b68b490aef8836e8fb5e50ee7b3bdfa5894f0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.image }}
          tags: |
            type=raw,value=${{ matrix.fops_version }}
            type=raw,value=latest
      
      - name: Build Docker image
        id: build
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991
        with:
          context: ./${{ matrix.image }}
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            FOPS_IMAGE_VERSION=${{ matrix.fops_version }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-${{ matrix.image }}:${{ matrix.fops_version }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          skip-dirs: '/root/.composer'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && github.event_name == 'pull_request'
        with:
          sarif_file: 'trivy-results.sarif'
          category: trivy-${{ matrix.image }}

      - name: Push Docker image
        id: push
        if: success()
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991
        with:
          context: ./${{ matrix.image }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            FOPS_IMAGE_VERSION=${{ matrix.fops_version }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-${{ matrix.image }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
